
    @model List<SimpleReportViewModel> 
    @{
        var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Temp).ToList());
        var YValues2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Humidity).ToList());
        var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Day).ToList());
        ViewData["Title"] = "Line Chart";
    } 

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Line</title>
</head>
<body>
    <div class="box-body">

        <div class="chart-container">
            <canvas id="chart" style="width:100%; height:500px"></canvas>
        </div>
    </div>
</body>
</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">
            $(function () {
                var chartName = "chart";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: 'Temperature',
                    yAxisID: 'Temperature',
                    backgroundColor: [
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)'
                    ],
                    borderColor: [
                        'rgba(255, 0, 0,1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)',
                        'rgba(255, 0, 0)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues),
                    fill: false,
                }, {
                        label: 'Humidity',
                        yAxisID: 'Humidity',
                        backgroundColor: [
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255, 0.2)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)'
                        ],
                        borderColor: [
                            'rgba(0, 0, 255,1)',
                            'rgba(0, 0, 255, 1)',
                            'rgba(0, 0, 255, 1)',
                            'rgba(0, 0, 255, 1)',
                            'rgba(0, 0, 255, 1)',
                            'rgba(0, 0, 255, 1)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)',
                            'rgba(0, 0, 255)'
                        ],
                        borderWidth: 1,
                        data: @Html.Raw(YValues2), 
                        fill: false
                }]
            };

    var options = {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            id: 'Temperature',
                            type: 'linear',
                            position: 'left',
                            scaleLabel: {
                                display: true,
                                labelString: 'Temperature in F'
                            },
                            ticks: {
                                min: 0,
                                max: 120,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false,
                                color: "rgba(0,0,0,0.2)"
                            }
                        }, {
                            id: 'Humidity',
                            type: 'linear',
                            position: 'right',
                            scaleLabel: {
                                display: true,
                                labelString: 'Humidity in %'
                            },
                            ticks: {
                                min: 0,
                                max: 100,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false,
                                color: "rgba(0,0,0,0.2)"
                            }
                         }],
                        xAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                };

           var myChart = new  Chart(ctx, {
                    options: options,
                    data: data,
                    type:'line'

                });
            });
</script>